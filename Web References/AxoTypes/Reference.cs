//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18051.
// 
#pragma warning disable 1591

namespace Inedo.BuildMasterExtensions.Axosoft.AxoTypes {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TypeHandlerSoap", Namespace="http://axosoft.com/ontime/webservices/")]
    public partial class TypeHandler : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetStatusTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeverityTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPriorityTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoryTypesByOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTimeUnitTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemRelationTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkLogTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReleaseTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReleaseStatusTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReleaseStatusTypesByReleaseTypeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TypeHandler() {
            this.Url = "http://localhost:8080/TypeService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetStatusTypesCompletedEventHandler GetStatusTypesCompleted;
        
        /// <remarks/>
        public event GetSeverityTypesCompletedEventHandler GetSeverityTypesCompleted;
        
        /// <remarks/>
        public event GetPriorityTypesCompletedEventHandler GetPriorityTypesCompleted;
        
        /// <remarks/>
        public event GetCategoryTypesCompletedEventHandler GetCategoryTypesCompleted;
        
        /// <remarks/>
        public event GetCategoryTypesByOwnerCompletedEventHandler GetCategoryTypesByOwnerCompleted;
        
        /// <remarks/>
        public event GetTimeUnitTypesCompletedEventHandler GetTimeUnitTypesCompleted;
        
        /// <remarks/>
        public event GetItemRelationTypesCompletedEventHandler GetItemRelationTypesCompleted;
        
        /// <remarks/>
        public event GetWorkLogTypesCompletedEventHandler GetWorkLogTypesCompleted;
        
        /// <remarks/>
        public event GetReleaseTypesCompletedEventHandler GetReleaseTypesCompleted;
        
        /// <remarks/>
        public event GetReleaseStatusTypesCompletedEventHandler GetReleaseStatusTypesCompleted;
        
        /// <remarks/>
        public event GetReleaseStatusTypesByReleaseTypeCompletedEventHandler GetReleaseStatusTypesByReleaseTypeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetStatusTypes", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStatusTypes(System.Guid securityToken) {
            object[] results = this.Invoke("GetStatusTypes", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusTypesAsync(System.Guid securityToken) {
            this.GetStatusTypesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetStatusTypesAsync(System.Guid securityToken, object userState) {
            if ((this.GetStatusTypesOperationCompleted == null)) {
                this.GetStatusTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusTypesOperationCompleted);
            }
            this.InvokeAsync("GetStatusTypes", new object[] {
                        securityToken}, this.GetStatusTypesOperationCompleted, userState);
        }
        
        private void OnGetStatusTypesOperationCompleted(object arg) {
            if ((this.GetStatusTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusTypesCompleted(this, new GetStatusTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetSeverityTypes", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeverityTypes(System.Guid securityToken) {
            object[] results = this.Invoke("GetSeverityTypes", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeverityTypesAsync(System.Guid securityToken) {
            this.GetSeverityTypesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetSeverityTypesAsync(System.Guid securityToken, object userState) {
            if ((this.GetSeverityTypesOperationCompleted == null)) {
                this.GetSeverityTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeverityTypesOperationCompleted);
            }
            this.InvokeAsync("GetSeverityTypes", new object[] {
                        securityToken}, this.GetSeverityTypesOperationCompleted, userState);
        }
        
        private void OnGetSeverityTypesOperationCompleted(object arg) {
            if ((this.GetSeverityTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeverityTypesCompleted(this, new GetSeverityTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetPriorityTypes", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPriorityTypes(System.Guid securityToken) {
            object[] results = this.Invoke("GetPriorityTypes", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPriorityTypesAsync(System.Guid securityToken) {
            this.GetPriorityTypesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetPriorityTypesAsync(System.Guid securityToken, object userState) {
            if ((this.GetPriorityTypesOperationCompleted == null)) {
                this.GetPriorityTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPriorityTypesOperationCompleted);
            }
            this.InvokeAsync("GetPriorityTypes", new object[] {
                        securityToken}, this.GetPriorityTypesOperationCompleted, userState);
        }
        
        private void OnGetPriorityTypesOperationCompleted(object arg) {
            if ((this.GetPriorityTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPriorityTypesCompleted(this, new GetPriorityTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetCategoryTypes", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCategoryTypes(System.Guid securityToken) {
            object[] results = this.Invoke("GetCategoryTypes", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryTypesAsync(System.Guid securityToken) {
            this.GetCategoryTypesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetCategoryTypesAsync(System.Guid securityToken, object userState) {
            if ((this.GetCategoryTypesOperationCompleted == null)) {
                this.GetCategoryTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryTypesOperationCompleted);
            }
            this.InvokeAsync("GetCategoryTypes", new object[] {
                        securityToken}, this.GetCategoryTypesOperationCompleted, userState);
        }
        
        private void OnGetCategoryTypesOperationCompleted(object arg) {
            if ((this.GetCategoryTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryTypesCompleted(this, new GetCategoryTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetCategoryTypesByOwner", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCategoryTypesByOwner(System.Guid securityToken, int ownerId) {
            object[] results = this.Invoke("GetCategoryTypesByOwner", new object[] {
                        securityToken,
                        ownerId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoryTypesByOwnerAsync(System.Guid securityToken, int ownerId) {
            this.GetCategoryTypesByOwnerAsync(securityToken, ownerId, null);
        }
        
        /// <remarks/>
        public void GetCategoryTypesByOwnerAsync(System.Guid securityToken, int ownerId, object userState) {
            if ((this.GetCategoryTypesByOwnerOperationCompleted == null)) {
                this.GetCategoryTypesByOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoryTypesByOwnerOperationCompleted);
            }
            this.InvokeAsync("GetCategoryTypesByOwner", new object[] {
                        securityToken,
                        ownerId}, this.GetCategoryTypesByOwnerOperationCompleted, userState);
        }
        
        private void OnGetCategoryTypesByOwnerOperationCompleted(object arg) {
            if ((this.GetCategoryTypesByOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoryTypesByOwnerCompleted(this, new GetCategoryTypesByOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetTimeUnitTypes", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTimeUnitTypes(System.Guid securityToken) {
            object[] results = this.Invoke("GetTimeUnitTypes", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTimeUnitTypesAsync(System.Guid securityToken) {
            this.GetTimeUnitTypesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetTimeUnitTypesAsync(System.Guid securityToken, object userState) {
            if ((this.GetTimeUnitTypesOperationCompleted == null)) {
                this.GetTimeUnitTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimeUnitTypesOperationCompleted);
            }
            this.InvokeAsync("GetTimeUnitTypes", new object[] {
                        securityToken}, this.GetTimeUnitTypesOperationCompleted, userState);
        }
        
        private void OnGetTimeUnitTypesOperationCompleted(object arg) {
            if ((this.GetTimeUnitTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimeUnitTypesCompleted(this, new GetTimeUnitTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetItemRelationTypes", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemRelationTypes(System.Guid securityToken) {
            object[] results = this.Invoke("GetItemRelationTypes", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemRelationTypesAsync(System.Guid securityToken) {
            this.GetItemRelationTypesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetItemRelationTypesAsync(System.Guid securityToken, object userState) {
            if ((this.GetItemRelationTypesOperationCompleted == null)) {
                this.GetItemRelationTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemRelationTypesOperationCompleted);
            }
            this.InvokeAsync("GetItemRelationTypes", new object[] {
                        securityToken}, this.GetItemRelationTypesOperationCompleted, userState);
        }
        
        private void OnGetItemRelationTypesOperationCompleted(object arg) {
            if ((this.GetItemRelationTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemRelationTypesCompleted(this, new GetItemRelationTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetWorkLogTypes", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorkLogTypes(System.Guid securityToken) {
            object[] results = this.Invoke("GetWorkLogTypes", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkLogTypesAsync(System.Guid securityToken) {
            this.GetWorkLogTypesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetWorkLogTypesAsync(System.Guid securityToken, object userState) {
            if ((this.GetWorkLogTypesOperationCompleted == null)) {
                this.GetWorkLogTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkLogTypesOperationCompleted);
            }
            this.InvokeAsync("GetWorkLogTypes", new object[] {
                        securityToken}, this.GetWorkLogTypesOperationCompleted, userState);
        }
        
        private void OnGetWorkLogTypesOperationCompleted(object arg) {
            if ((this.GetWorkLogTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkLogTypesCompleted(this, new GetWorkLogTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetReleaseTypes", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReleaseTypes(System.Guid securityToken) {
            object[] results = this.Invoke("GetReleaseTypes", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReleaseTypesAsync(System.Guid securityToken) {
            this.GetReleaseTypesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetReleaseTypesAsync(System.Guid securityToken, object userState) {
            if ((this.GetReleaseTypesOperationCompleted == null)) {
                this.GetReleaseTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReleaseTypesOperationCompleted);
            }
            this.InvokeAsync("GetReleaseTypes", new object[] {
                        securityToken}, this.GetReleaseTypesOperationCompleted, userState);
        }
        
        private void OnGetReleaseTypesOperationCompleted(object arg) {
            if ((this.GetReleaseTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReleaseTypesCompleted(this, new GetReleaseTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetReleaseStatusTypes", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReleaseStatusTypes(System.Guid securityToken) {
            object[] results = this.Invoke("GetReleaseStatusTypes", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReleaseStatusTypesAsync(System.Guid securityToken) {
            this.GetReleaseStatusTypesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetReleaseStatusTypesAsync(System.Guid securityToken, object userState) {
            if ((this.GetReleaseStatusTypesOperationCompleted == null)) {
                this.GetReleaseStatusTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReleaseStatusTypesOperationCompleted);
            }
            this.InvokeAsync("GetReleaseStatusTypes", new object[] {
                        securityToken}, this.GetReleaseStatusTypesOperationCompleted, userState);
        }
        
        private void OnGetReleaseStatusTypesOperationCompleted(object arg) {
            if ((this.GetReleaseStatusTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReleaseStatusTypesCompleted(this, new GetReleaseStatusTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetReleaseStatusTypesByReleaseType", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReleaseStatusTypesByReleaseType(System.Guid securityToken, int releaseTypeId) {
            object[] results = this.Invoke("GetReleaseStatusTypesByReleaseType", new object[] {
                        securityToken,
                        releaseTypeId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReleaseStatusTypesByReleaseTypeAsync(System.Guid securityToken, int releaseTypeId) {
            this.GetReleaseStatusTypesByReleaseTypeAsync(securityToken, releaseTypeId, null);
        }
        
        /// <remarks/>
        public void GetReleaseStatusTypesByReleaseTypeAsync(System.Guid securityToken, int releaseTypeId, object userState) {
            if ((this.GetReleaseStatusTypesByReleaseTypeOperationCompleted == null)) {
                this.GetReleaseStatusTypesByReleaseTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReleaseStatusTypesByReleaseTypeOperationCompleted);
            }
            this.InvokeAsync("GetReleaseStatusTypesByReleaseType", new object[] {
                        securityToken,
                        releaseTypeId}, this.GetReleaseStatusTypesByReleaseTypeOperationCompleted, userState);
        }
        
        private void OnGetReleaseStatusTypesByReleaseTypeOperationCompleted(object arg) {
            if ((this.GetReleaseStatusTypesByReleaseTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReleaseStatusTypesByReleaseTypeCompleted(this, new GetReleaseStatusTypesByReleaseTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetStatusTypesCompletedEventHandler(object sender, GetStatusTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSeverityTypesCompletedEventHandler(object sender, GetSeverityTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeverityTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeverityTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPriorityTypesCompletedEventHandler(object sender, GetPriorityTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPriorityTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPriorityTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCategoryTypesCompletedEventHandler(object sender, GetCategoryTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCategoryTypesByOwnerCompletedEventHandler(object sender, GetCategoryTypesByOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoryTypesByOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoryTypesByOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTimeUnitTypesCompletedEventHandler(object sender, GetTimeUnitTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimeUnitTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimeUnitTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetItemRelationTypesCompletedEventHandler(object sender, GetItemRelationTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemRelationTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemRelationTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWorkLogTypesCompletedEventHandler(object sender, GetWorkLogTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkLogTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkLogTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReleaseTypesCompletedEventHandler(object sender, GetReleaseTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReleaseTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReleaseTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReleaseStatusTypesCompletedEventHandler(object sender, GetReleaseStatusTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReleaseStatusTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReleaseStatusTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetReleaseStatusTypesByReleaseTypeCompletedEventHandler(object sender, GetReleaseStatusTypesByReleaseTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReleaseStatusTypesByReleaseTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReleaseStatusTypesByReleaseTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591