//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18051.
// 
#pragma warning disable 1591

namespace Inedo.BuildMasterExtensions.Axosoft.AxoProject {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProjectHandlerSoap", Namespace="http://axosoft.com/ontime/webservices/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomFieldValue[]))]
    public partial class ProjectHandler : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByProjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerCustomFieldValuesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomFieldsListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProjectHandler() {
            this.Url = "http://localhost:8080/ProjectService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllProjectsCompletedEventHandler GetAllProjectsCompleted;
        
        /// <remarks/>
        public event GetByProjectIdCompletedEventHandler GetByProjectIdCompleted;
        
        /// <remarks/>
        public event AddProjectCompletedEventHandler AddProjectCompleted;
        
        /// <remarks/>
        public event UpdateProjectCompletedEventHandler UpdateProjectCompleted;
        
        /// <remarks/>
        public event DeleteProjectCompletedEventHandler DeleteProjectCompleted;
        
        /// <remarks/>
        public event GetCustomerCustomFieldValuesListCompletedEventHandler GetCustomerCustomFieldValuesListCompleted;
        
        /// <remarks/>
        public event GetCustomFieldsListCompletedEventHandler GetCustomFieldsListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetAllProjects", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllProjects(System.Guid securityToken) {
            object[] results = this.Invoke("GetAllProjects", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProjectsAsync(System.Guid securityToken) {
            this.GetAllProjectsAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetAllProjectsAsync(System.Guid securityToken, object userState) {
            if ((this.GetAllProjectsOperationCompleted == null)) {
                this.GetAllProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProjectsOperationCompleted);
            }
            this.InvokeAsync("GetAllProjects", new object[] {
                        securityToken}, this.GetAllProjectsOperationCompleted, userState);
        }
        
        private void OnGetAllProjectsOperationCompleted(object arg) {
            if ((this.GetAllProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProjectsCompleted(this, new GetAllProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetByProjectId", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Project GetByProjectId(System.Guid securityToken, int projectId) {
            object[] results = this.Invoke("GetByProjectId", new object[] {
                        securityToken,
                        projectId});
            return ((Project)(results[0]));
        }
        
        /// <remarks/>
        public void GetByProjectIdAsync(System.Guid securityToken, int projectId) {
            this.GetByProjectIdAsync(securityToken, projectId, null);
        }
        
        /// <remarks/>
        public void GetByProjectIdAsync(System.Guid securityToken, int projectId, object userState) {
            if ((this.GetByProjectIdOperationCompleted == null)) {
                this.GetByProjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByProjectIdOperationCompleted);
            }
            this.InvokeAsync("GetByProjectId", new object[] {
                        securityToken,
                        projectId}, this.GetByProjectIdOperationCompleted, userState);
        }
        
        private void OnGetByProjectIdOperationCompleted(object arg) {
            if ((this.GetByProjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByProjectIdCompleted(this, new GetByProjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/AddProject", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddProject(System.Guid securityToken, Project project) {
            object[] results = this.Invoke("AddProject", new object[] {
                        securityToken,
                        project});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddProjectAsync(System.Guid securityToken, Project project) {
            this.AddProjectAsync(securityToken, project, null);
        }
        
        /// <remarks/>
        public void AddProjectAsync(System.Guid securityToken, Project project, object userState) {
            if ((this.AddProjectOperationCompleted == null)) {
                this.AddProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProjectOperationCompleted);
            }
            this.InvokeAsync("AddProject", new object[] {
                        securityToken,
                        project}, this.AddProjectOperationCompleted, userState);
        }
        
        private void OnAddProjectOperationCompleted(object arg) {
            if ((this.AddProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProjectCompleted(this, new AddProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/UpdateProject", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProject(System.Guid securityToken, Project project) {
            this.Invoke("UpdateProject", new object[] {
                        securityToken,
                        project});
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(System.Guid securityToken, Project project) {
            this.UpdateProjectAsync(securityToken, project, null);
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(System.Guid securityToken, Project project, object userState) {
            if ((this.UpdateProjectOperationCompleted == null)) {
                this.UpdateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProjectOperationCompleted);
            }
            this.InvokeAsync("UpdateProject", new object[] {
                        securityToken,
                        project}, this.UpdateProjectOperationCompleted, userState);
        }
        
        private void OnUpdateProjectOperationCompleted(object arg) {
            if ((this.UpdateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/DeleteProject", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteProject(System.Guid securityToken, int projectId) {
            this.Invoke("DeleteProject", new object[] {
                        securityToken,
                        projectId});
        }
        
        /// <remarks/>
        public void DeleteProjectAsync(System.Guid securityToken, int projectId) {
            this.DeleteProjectAsync(securityToken, projectId, null);
        }
        
        /// <remarks/>
        public void DeleteProjectAsync(System.Guid securityToken, int projectId, object userState) {
            if ((this.DeleteProjectOperationCompleted == null)) {
                this.DeleteProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteProjectOperationCompleted);
            }
            this.InvokeAsync("DeleteProject", new object[] {
                        securityToken,
                        projectId}, this.DeleteProjectOperationCompleted, userState);
        }
        
        private void OnDeleteProjectOperationCompleted(object arg) {
            if ((this.DeleteProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetCustomerCustomFieldValuesList", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomFieldValue[] GetCustomerCustomFieldValuesList(System.Guid securityToken) {
            object[] results = this.Invoke("GetCustomerCustomFieldValuesList", new object[] {
                        securityToken});
            return ((CustomFieldValue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerCustomFieldValuesListAsync(System.Guid securityToken) {
            this.GetCustomerCustomFieldValuesListAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetCustomerCustomFieldValuesListAsync(System.Guid securityToken, object userState) {
            if ((this.GetCustomerCustomFieldValuesListOperationCompleted == null)) {
                this.GetCustomerCustomFieldValuesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerCustomFieldValuesListOperationCompleted);
            }
            this.InvokeAsync("GetCustomerCustomFieldValuesList", new object[] {
                        securityToken}, this.GetCustomerCustomFieldValuesListOperationCompleted, userState);
        }
        
        private void OnGetCustomerCustomFieldValuesListOperationCompleted(object arg) {
            if ((this.GetCustomerCustomFieldValuesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerCustomFieldValuesListCompleted(this, new GetCustomerCustomFieldValuesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetCustomFieldsList", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomFieldsList(System.Guid securityToken) {
            object[] results = this.Invoke("GetCustomFieldsList", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomFieldsListAsync(System.Guid securityToken) {
            this.GetCustomFieldsListAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetCustomFieldsListAsync(System.Guid securityToken, object userState) {
            if ((this.GetCustomFieldsListOperationCompleted == null)) {
                this.GetCustomFieldsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomFieldsListOperationCompleted);
            }
            this.InvokeAsync("GetCustomFieldsList", new object[] {
                        securityToken}, this.GetCustomFieldsListOperationCompleted, userState);
        }
        
        private void OnGetCustomFieldsListOperationCompleted(object arg) {
            if ((this.GetCustomFieldsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomFieldsListCompleted(this, new GetCustomFieldsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public partial class Project {
        
        private int projectIdField;
        
        private int parentIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime startDateField;
        
        private System.DateTime dueDateField;
        
        private bool isActiveField;
        
        private string pathField;
        
        private bool hasChildrenField;
        
        private bool hasAlertsField;
        
        private bool hasAttachmentsField;
        
        private bool hasNotificationListsField;
        
        private CustomFieldValue[] customFieldValuesField;
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public bool HasChildren {
            get {
                return this.hasChildrenField;
            }
            set {
                this.hasChildrenField = value;
            }
        }
        
        /// <remarks/>
        public bool HasAlerts {
            get {
                return this.hasAlertsField;
            }
            set {
                this.hasAlertsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasAttachments {
            get {
                return this.hasAttachmentsField;
            }
            set {
                this.hasAttachmentsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasNotificationLists {
            get {
                return this.hasNotificationListsField;
            }
            set {
                this.hasNotificationListsField = value;
            }
        }
        
        /// <remarks/>
        public CustomFieldValue[] CustomFieldValues {
            get {
                return this.customFieldValuesField;
            }
            set {
                this.customFieldValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public partial class CustomFieldValue {
        
        private CustomField customFieldField;
        
        private object valueField;
        
        /// <remarks/>
        public CustomField CustomField {
            get {
                return this.customFieldField;
            }
            set {
                this.customFieldField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public partial class CustomField {
        
        private int customFieldIdField;
        
        private string tableFieldNameField;
        
        private CustomFieldTypes fieldTypeField;
        
        private CustomRecordTypes recordTypeField;
        
        private string fieldLabelField;
        
        private int pickListIdField;
        
        private int stringSizeField;
        
        private string formatField;
        
        private int displayOrderField;
        
        private bool isMultiSelectField;
        
        private bool isEditableField;
        
        private bool isCustomFieldField;
        
        private bool isGroupableField;
        
        private bool isSearchableField;
        
        private string sortExpressionField;
        
        private string selectExpressionField;
        
        /// <remarks/>
        public int CustomFieldId {
            get {
                return this.customFieldIdField;
            }
            set {
                this.customFieldIdField = value;
            }
        }
        
        /// <remarks/>
        public string TableFieldName {
            get {
                return this.tableFieldNameField;
            }
            set {
                this.tableFieldNameField = value;
            }
        }
        
        /// <remarks/>
        public CustomFieldTypes FieldType {
            get {
                return this.fieldTypeField;
            }
            set {
                this.fieldTypeField = value;
            }
        }
        
        /// <remarks/>
        public CustomRecordTypes RecordType {
            get {
                return this.recordTypeField;
            }
            set {
                this.recordTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FieldLabel {
            get {
                return this.fieldLabelField;
            }
            set {
                this.fieldLabelField = value;
            }
        }
        
        /// <remarks/>
        public int PickListId {
            get {
                return this.pickListIdField;
            }
            set {
                this.pickListIdField = value;
            }
        }
        
        /// <remarks/>
        public int StringSize {
            get {
                return this.stringSizeField;
            }
            set {
                this.stringSizeField = value;
            }
        }
        
        /// <remarks/>
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        public int DisplayOrder {
            get {
                return this.displayOrderField;
            }
            set {
                this.displayOrderField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMultiSelect {
            get {
                return this.isMultiSelectField;
            }
            set {
                this.isMultiSelectField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEditable {
            get {
                return this.isEditableField;
            }
            set {
                this.isEditableField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCustomField {
            get {
                return this.isCustomFieldField;
            }
            set {
                this.isCustomFieldField = value;
            }
        }
        
        /// <remarks/>
        public bool IsGroupable {
            get {
                return this.isGroupableField;
            }
            set {
                this.isGroupableField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSearchable {
            get {
                return this.isSearchableField;
            }
            set {
                this.isSearchableField = value;
            }
        }
        
        /// <remarks/>
        public string SortExpression {
            get {
                return this.sortExpressionField;
            }
            set {
                this.sortExpressionField = value;
            }
        }
        
        /// <remarks/>
        public string SelectExpression {
            get {
                return this.selectExpressionField;
            }
            set {
                this.selectExpressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public enum CustomFieldTypes {
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        PickList,
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        Hyperlink,
        
        /// <remarks/>
        Comments,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18058")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public enum CustomRecordTypes {
        
        /// <remarks/>
        Defect,
        
        /// <remarks/>
        Feature,
        
        /// <remarks/>
        Task,
        
        /// <remarks/>
        Incident,
        
        /// <remarks/>
        WorkLog,
        
        /// <remarks/>
        Project,
        
        /// <remarks/>
        Customer,
        
        /// <remarks/>
        CustomerContact,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllProjectsCompletedEventHandler(object sender, GetAllProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetByProjectIdCompletedEventHandler(object sender, GetByProjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByProjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByProjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddProjectCompletedEventHandler(object sender, AddProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCustomerCustomFieldValuesListCompletedEventHandler(object sender, GetCustomerCustomFieldValuesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerCustomFieldValuesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerCustomFieldValuesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomFieldValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomFieldValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCustomFieldsListCompletedEventHandler(object sender, GetCustomFieldsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomFieldsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomFieldsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591