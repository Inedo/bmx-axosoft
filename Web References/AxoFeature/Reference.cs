//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Inedo.BuildMasterExtensions.Axosoft.AxoFeature {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FeatureHandlerSoap", Namespace="http://axosoft.com/ontime/webservices/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OnTimeItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomFieldValue[]))]
    public partial class FeatureHandler : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddFeatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFeatureWithNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFeatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFeatureWithLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFeatureOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFeatureWithLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFeaturesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFeaturesWithNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesByProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesByReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesByReleaseAndProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesByCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesByCustomerAndProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesByCustomerContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesByCustomerContactAndProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeaturesByUserAndProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByFeatureIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomFieldValuesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomFieldsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddChangeNotificationUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddChangeNotificationCustomerContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddChangeNotificationEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback CastVoteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FeatureHandler() {
            this.Url = "http://localhost:8080/FeatureService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddFeatureCompletedEventHandler AddFeatureCompleted;
        
        /// <remarks/>
        public event AddFeatureWithNotificationCompletedEventHandler AddFeatureWithNotificationCompleted;
        
        /// <remarks/>
        public event UpdateFeatureCompletedEventHandler UpdateFeatureCompleted;
        
        /// <remarks/>
        public event UpdateFeatureWithLockCompletedEventHandler UpdateFeatureWithLockCompleted;
        
        /// <remarks/>
        public event DeleteFeatureCompletedEventHandler DeleteFeatureCompleted;
        
        /// <remarks/>
        public event DeleteFeatureWithLockCompletedEventHandler DeleteFeatureWithLockCompleted;
        
        /// <remarks/>
        public event GetAllFeaturesCompletedEventHandler GetAllFeaturesCompleted;
        
        /// <remarks/>
        public event GetAllFeaturesWithNamesCompletedEventHandler GetAllFeaturesWithNamesCompleted;
        
        /// <remarks/>
        public event GetFeaturesByProjectCompletedEventHandler GetFeaturesByProjectCompleted;
        
        /// <remarks/>
        public event GetFeaturesByReleaseCompletedEventHandler GetFeaturesByReleaseCompleted;
        
        /// <remarks/>
        public event GetFeaturesByReleaseAndProjectCompletedEventHandler GetFeaturesByReleaseAndProjectCompleted;
        
        /// <remarks/>
        public event GetFeaturesByCustomerCompletedEventHandler GetFeaturesByCustomerCompleted;
        
        /// <remarks/>
        public event GetFeaturesByCustomerAndProjectCompletedEventHandler GetFeaturesByCustomerAndProjectCompleted;
        
        /// <remarks/>
        public event GetFeaturesByCustomerContactCompletedEventHandler GetFeaturesByCustomerContactCompleted;
        
        /// <remarks/>
        public event GetFeaturesByCustomerContactAndProjectCompletedEventHandler GetFeaturesByCustomerContactAndProjectCompleted;
        
        /// <remarks/>
        public event GetFeaturesByUserCompletedEventHandler GetFeaturesByUserCompleted;
        
        /// <remarks/>
        public event GetFeaturesByUserAndProjectCompletedEventHandler GetFeaturesByUserAndProjectCompleted;
        
        /// <remarks/>
        public event GetByFeatureIdCompletedEventHandler GetByFeatureIdCompleted;
        
        /// <remarks/>
        public event GetCustomFieldValuesListCompletedEventHandler GetCustomFieldValuesListCompleted;
        
        /// <remarks/>
        public event GetCustomFieldsListCompletedEventHandler GetCustomFieldsListCompleted;
        
        /// <remarks/>
        public event AddChangeNotificationUserCompletedEventHandler AddChangeNotificationUserCompleted;
        
        /// <remarks/>
        public event AddChangeNotificationCustomerContactCompletedEventHandler AddChangeNotificationCustomerContactCompleted;
        
        /// <remarks/>
        public event AddChangeNotificationEmailAddressCompletedEventHandler AddChangeNotificationEmailAddressCompleted;
        
        /// <remarks/>
        public event CastVoteCompletedEventHandler CastVoteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/AddFeature", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddFeature(System.Guid securityToken, Feature feature) {
            object[] results = this.Invoke("AddFeature", new object[] {
                        securityToken,
                        feature});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddFeatureAsync(System.Guid securityToken, Feature feature) {
            this.AddFeatureAsync(securityToken, feature, null);
        }
        
        /// <remarks/>
        public void AddFeatureAsync(System.Guid securityToken, Feature feature, object userState) {
            if ((this.AddFeatureOperationCompleted == null)) {
                this.AddFeatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFeatureOperationCompleted);
            }
            this.InvokeAsync("AddFeature", new object[] {
                        securityToken,
                        feature}, this.AddFeatureOperationCompleted, userState);
        }
        
        private void OnAddFeatureOperationCompleted(object arg) {
            if ((this.AddFeatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFeatureCompleted(this, new AddFeatureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/AddFeatureWithNotification", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddFeatureWithNotification(System.Guid securityToken, Feature feature, bool processNotification) {
            object[] results = this.Invoke("AddFeatureWithNotification", new object[] {
                        securityToken,
                        feature,
                        processNotification});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddFeatureWithNotificationAsync(System.Guid securityToken, Feature feature, bool processNotification) {
            this.AddFeatureWithNotificationAsync(securityToken, feature, processNotification, null);
        }
        
        /// <remarks/>
        public void AddFeatureWithNotificationAsync(System.Guid securityToken, Feature feature, bool processNotification, object userState) {
            if ((this.AddFeatureWithNotificationOperationCompleted == null)) {
                this.AddFeatureWithNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFeatureWithNotificationOperationCompleted);
            }
            this.InvokeAsync("AddFeatureWithNotification", new object[] {
                        securityToken,
                        feature,
                        processNotification}, this.AddFeatureWithNotificationOperationCompleted, userState);
        }
        
        private void OnAddFeatureWithNotificationOperationCompleted(object arg) {
            if ((this.AddFeatureWithNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFeatureWithNotificationCompleted(this, new AddFeatureWithNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/UpdateFeature", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFeature(System.Guid securityToken, Feature feature) {
            this.Invoke("UpdateFeature", new object[] {
                        securityToken,
                        feature});
        }
        
        /// <remarks/>
        public void UpdateFeatureAsync(System.Guid securityToken, Feature feature) {
            this.UpdateFeatureAsync(securityToken, feature, null);
        }
        
        /// <remarks/>
        public void UpdateFeatureAsync(System.Guid securityToken, Feature feature, object userState) {
            if ((this.UpdateFeatureOperationCompleted == null)) {
                this.UpdateFeatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFeatureOperationCompleted);
            }
            this.InvokeAsync("UpdateFeature", new object[] {
                        securityToken,
                        feature}, this.UpdateFeatureOperationCompleted, userState);
        }
        
        private void OnUpdateFeatureOperationCompleted(object arg) {
            if ((this.UpdateFeatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFeatureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/UpdateFeatureWithLock", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("newLockId")]
        public int UpdateFeatureWithLock(System.Guid securityToken, Feature feature, int lockId) {
            object[] results = this.Invoke("UpdateFeatureWithLock", new object[] {
                        securityToken,
                        feature,
                        lockId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFeatureWithLockAsync(System.Guid securityToken, Feature feature, int lockId) {
            this.UpdateFeatureWithLockAsync(securityToken, feature, lockId, null);
        }
        
        /// <remarks/>
        public void UpdateFeatureWithLockAsync(System.Guid securityToken, Feature feature, int lockId, object userState) {
            if ((this.UpdateFeatureWithLockOperationCompleted == null)) {
                this.UpdateFeatureWithLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFeatureWithLockOperationCompleted);
            }
            this.InvokeAsync("UpdateFeatureWithLock", new object[] {
                        securityToken,
                        feature,
                        lockId}, this.UpdateFeatureWithLockOperationCompleted, userState);
        }
        
        private void OnUpdateFeatureWithLockOperationCompleted(object arg) {
            if ((this.UpdateFeatureWithLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFeatureWithLockCompleted(this, new UpdateFeatureWithLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/DeleteFeature", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFeature(System.Guid securityToken, int featureId) {
            this.Invoke("DeleteFeature", new object[] {
                        securityToken,
                        featureId});
        }
        
        /// <remarks/>
        public void DeleteFeatureAsync(System.Guid securityToken, int featureId) {
            this.DeleteFeatureAsync(securityToken, featureId, null);
        }
        
        /// <remarks/>
        public void DeleteFeatureAsync(System.Guid securityToken, int featureId, object userState) {
            if ((this.DeleteFeatureOperationCompleted == null)) {
                this.DeleteFeatureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFeatureOperationCompleted);
            }
            this.InvokeAsync("DeleteFeature", new object[] {
                        securityToken,
                        featureId}, this.DeleteFeatureOperationCompleted, userState);
        }
        
        private void OnDeleteFeatureOperationCompleted(object arg) {
            if ((this.DeleteFeatureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFeatureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/DeleteFeatureWithLock", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("newLockId")]
        public int DeleteFeatureWithLock(System.Guid securityToken, int featureId, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] featureLastUpdated, int lockId) {
            object[] results = this.Invoke("DeleteFeatureWithLock", new object[] {
                        securityToken,
                        featureId,
                        featureLastUpdated,
                        lockId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFeatureWithLockAsync(System.Guid securityToken, int featureId, byte[] featureLastUpdated, int lockId) {
            this.DeleteFeatureWithLockAsync(securityToken, featureId, featureLastUpdated, lockId, null);
        }
        
        /// <remarks/>
        public void DeleteFeatureWithLockAsync(System.Guid securityToken, int featureId, byte[] featureLastUpdated, int lockId, object userState) {
            if ((this.DeleteFeatureWithLockOperationCompleted == null)) {
                this.DeleteFeatureWithLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFeatureWithLockOperationCompleted);
            }
            this.InvokeAsync("DeleteFeatureWithLock", new object[] {
                        securityToken,
                        featureId,
                        featureLastUpdated,
                        lockId}, this.DeleteFeatureWithLockOperationCompleted, userState);
        }
        
        private void OnDeleteFeatureWithLockOperationCompleted(object arg) {
            if ((this.DeleteFeatureWithLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFeatureWithLockCompleted(this, new DeleteFeatureWithLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetAllFeatures", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllFeatures(System.Guid securityToken) {
            object[] results = this.Invoke("GetAllFeatures", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFeaturesAsync(System.Guid securityToken) {
            this.GetAllFeaturesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetAllFeaturesAsync(System.Guid securityToken, object userState) {
            if ((this.GetAllFeaturesOperationCompleted == null)) {
                this.GetAllFeaturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFeaturesOperationCompleted);
            }
            this.InvokeAsync("GetAllFeatures", new object[] {
                        securityToken}, this.GetAllFeaturesOperationCompleted, userState);
        }
        
        private void OnGetAllFeaturesOperationCompleted(object arg) {
            if ((this.GetAllFeaturesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFeaturesCompleted(this, new GetAllFeaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetAllFeaturesWithNames", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllFeaturesWithNames(System.Guid securityToken) {
            object[] results = this.Invoke("GetAllFeaturesWithNames", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFeaturesWithNamesAsync(System.Guid securityToken) {
            this.GetAllFeaturesWithNamesAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetAllFeaturesWithNamesAsync(System.Guid securityToken, object userState) {
            if ((this.GetAllFeaturesWithNamesOperationCompleted == null)) {
                this.GetAllFeaturesWithNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFeaturesWithNamesOperationCompleted);
            }
            this.InvokeAsync("GetAllFeaturesWithNames", new object[] {
                        securityToken}, this.GetAllFeaturesWithNamesOperationCompleted, userState);
        }
        
        private void OnGetAllFeaturesWithNamesOperationCompleted(object arg) {
            if ((this.GetAllFeaturesWithNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFeaturesWithNamesCompleted(this, new GetAllFeaturesWithNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetFeaturesByProject", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeaturesByProject(System.Guid securityToken, int projectId) {
            object[] results = this.Invoke("GetFeaturesByProject", new object[] {
                        securityToken,
                        projectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesByProjectAsync(System.Guid securityToken, int projectId) {
            this.GetFeaturesByProjectAsync(securityToken, projectId, null);
        }
        
        /// <remarks/>
        public void GetFeaturesByProjectAsync(System.Guid securityToken, int projectId, object userState) {
            if ((this.GetFeaturesByProjectOperationCompleted == null)) {
                this.GetFeaturesByProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesByProjectOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesByProject", new object[] {
                        securityToken,
                        projectId}, this.GetFeaturesByProjectOperationCompleted, userState);
        }
        
        private void OnGetFeaturesByProjectOperationCompleted(object arg) {
            if ((this.GetFeaturesByProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesByProjectCompleted(this, new GetFeaturesByProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetFeaturesByRelease", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeaturesByRelease(System.Guid securityToken, int releaseId) {
            object[] results = this.Invoke("GetFeaturesByRelease", new object[] {
                        securityToken,
                        releaseId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesByReleaseAsync(System.Guid securityToken, int releaseId) {
            this.GetFeaturesByReleaseAsync(securityToken, releaseId, null);
        }
        
        /// <remarks/>
        public void GetFeaturesByReleaseAsync(System.Guid securityToken, int releaseId, object userState) {
            if ((this.GetFeaturesByReleaseOperationCompleted == null)) {
                this.GetFeaturesByReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesByReleaseOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesByRelease", new object[] {
                        securityToken,
                        releaseId}, this.GetFeaturesByReleaseOperationCompleted, userState);
        }
        
        private void OnGetFeaturesByReleaseOperationCompleted(object arg) {
            if ((this.GetFeaturesByReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesByReleaseCompleted(this, new GetFeaturesByReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetFeaturesByReleaseAndProject", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeaturesByReleaseAndProject(System.Guid securityToken, int releaseId, int projectId) {
            object[] results = this.Invoke("GetFeaturesByReleaseAndProject", new object[] {
                        securityToken,
                        releaseId,
                        projectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesByReleaseAndProjectAsync(System.Guid securityToken, int releaseId, int projectId) {
            this.GetFeaturesByReleaseAndProjectAsync(securityToken, releaseId, projectId, null);
        }
        
        /// <remarks/>
        public void GetFeaturesByReleaseAndProjectAsync(System.Guid securityToken, int releaseId, int projectId, object userState) {
            if ((this.GetFeaturesByReleaseAndProjectOperationCompleted == null)) {
                this.GetFeaturesByReleaseAndProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesByReleaseAndProjectOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesByReleaseAndProject", new object[] {
                        securityToken,
                        releaseId,
                        projectId}, this.GetFeaturesByReleaseAndProjectOperationCompleted, userState);
        }
        
        private void OnGetFeaturesByReleaseAndProjectOperationCompleted(object arg) {
            if ((this.GetFeaturesByReleaseAndProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesByReleaseAndProjectCompleted(this, new GetFeaturesByReleaseAndProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetFeaturesByCustomer", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeaturesByCustomer(System.Guid securityToken, int customerId) {
            object[] results = this.Invoke("GetFeaturesByCustomer", new object[] {
                        securityToken,
                        customerId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesByCustomerAsync(System.Guid securityToken, int customerId) {
            this.GetFeaturesByCustomerAsync(securityToken, customerId, null);
        }
        
        /// <remarks/>
        public void GetFeaturesByCustomerAsync(System.Guid securityToken, int customerId, object userState) {
            if ((this.GetFeaturesByCustomerOperationCompleted == null)) {
                this.GetFeaturesByCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesByCustomerOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesByCustomer", new object[] {
                        securityToken,
                        customerId}, this.GetFeaturesByCustomerOperationCompleted, userState);
        }
        
        private void OnGetFeaturesByCustomerOperationCompleted(object arg) {
            if ((this.GetFeaturesByCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesByCustomerCompleted(this, new GetFeaturesByCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetFeaturesByCustomerAndProject", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeaturesByCustomerAndProject(System.Guid securityToken, int customerId, int projectId) {
            object[] results = this.Invoke("GetFeaturesByCustomerAndProject", new object[] {
                        securityToken,
                        customerId,
                        projectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesByCustomerAndProjectAsync(System.Guid securityToken, int customerId, int projectId) {
            this.GetFeaturesByCustomerAndProjectAsync(securityToken, customerId, projectId, null);
        }
        
        /// <remarks/>
        public void GetFeaturesByCustomerAndProjectAsync(System.Guid securityToken, int customerId, int projectId, object userState) {
            if ((this.GetFeaturesByCustomerAndProjectOperationCompleted == null)) {
                this.GetFeaturesByCustomerAndProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesByCustomerAndProjectOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesByCustomerAndProject", new object[] {
                        securityToken,
                        customerId,
                        projectId}, this.GetFeaturesByCustomerAndProjectOperationCompleted, userState);
        }
        
        private void OnGetFeaturesByCustomerAndProjectOperationCompleted(object arg) {
            if ((this.GetFeaturesByCustomerAndProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesByCustomerAndProjectCompleted(this, new GetFeaturesByCustomerAndProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetFeaturesByCustomerContact", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeaturesByCustomerContact(System.Guid securityToken, int customerContactId) {
            object[] results = this.Invoke("GetFeaturesByCustomerContact", new object[] {
                        securityToken,
                        customerContactId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesByCustomerContactAsync(System.Guid securityToken, int customerContactId) {
            this.GetFeaturesByCustomerContactAsync(securityToken, customerContactId, null);
        }
        
        /// <remarks/>
        public void GetFeaturesByCustomerContactAsync(System.Guid securityToken, int customerContactId, object userState) {
            if ((this.GetFeaturesByCustomerContactOperationCompleted == null)) {
                this.GetFeaturesByCustomerContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesByCustomerContactOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesByCustomerContact", new object[] {
                        securityToken,
                        customerContactId}, this.GetFeaturesByCustomerContactOperationCompleted, userState);
        }
        
        private void OnGetFeaturesByCustomerContactOperationCompleted(object arg) {
            if ((this.GetFeaturesByCustomerContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesByCustomerContactCompleted(this, new GetFeaturesByCustomerContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetFeaturesByCustomerContactAndProject", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeaturesByCustomerContactAndProject(System.Guid securityToken, int customerContactId, int projectId) {
            object[] results = this.Invoke("GetFeaturesByCustomerContactAndProject", new object[] {
                        securityToken,
                        customerContactId,
                        projectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesByCustomerContactAndProjectAsync(System.Guid securityToken, int customerContactId, int projectId) {
            this.GetFeaturesByCustomerContactAndProjectAsync(securityToken, customerContactId, projectId, null);
        }
        
        /// <remarks/>
        public void GetFeaturesByCustomerContactAndProjectAsync(System.Guid securityToken, int customerContactId, int projectId, object userState) {
            if ((this.GetFeaturesByCustomerContactAndProjectOperationCompleted == null)) {
                this.GetFeaturesByCustomerContactAndProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesByCustomerContactAndProjectOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesByCustomerContactAndProject", new object[] {
                        securityToken,
                        customerContactId,
                        projectId}, this.GetFeaturesByCustomerContactAndProjectOperationCompleted, userState);
        }
        
        private void OnGetFeaturesByCustomerContactAndProjectOperationCompleted(object arg) {
            if ((this.GetFeaturesByCustomerContactAndProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesByCustomerContactAndProjectCompleted(this, new GetFeaturesByCustomerContactAndProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetFeaturesByUser", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeaturesByUser(System.Guid securityToken, int userId, UsersTreeFilterFlags userFilterFlags) {
            object[] results = this.Invoke("GetFeaturesByUser", new object[] {
                        securityToken,
                        userId,
                        userFilterFlags});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesByUserAsync(System.Guid securityToken, int userId, UsersTreeFilterFlags userFilterFlags) {
            this.GetFeaturesByUserAsync(securityToken, userId, userFilterFlags, null);
        }
        
        /// <remarks/>
        public void GetFeaturesByUserAsync(System.Guid securityToken, int userId, UsersTreeFilterFlags userFilterFlags, object userState) {
            if ((this.GetFeaturesByUserOperationCompleted == null)) {
                this.GetFeaturesByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesByUserOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesByUser", new object[] {
                        securityToken,
                        userId,
                        userFilterFlags}, this.GetFeaturesByUserOperationCompleted, userState);
        }
        
        private void OnGetFeaturesByUserOperationCompleted(object arg) {
            if ((this.GetFeaturesByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesByUserCompleted(this, new GetFeaturesByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetFeaturesByUserAndProject", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFeaturesByUserAndProject(System.Guid securityToken, int userId, UsersTreeFilterFlags userFilterFlags, int projectId) {
            object[] results = this.Invoke("GetFeaturesByUserAndProject", new object[] {
                        securityToken,
                        userId,
                        userFilterFlags,
                        projectId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeaturesByUserAndProjectAsync(System.Guid securityToken, int userId, UsersTreeFilterFlags userFilterFlags, int projectId) {
            this.GetFeaturesByUserAndProjectAsync(securityToken, userId, userFilterFlags, projectId, null);
        }
        
        /// <remarks/>
        public void GetFeaturesByUserAndProjectAsync(System.Guid securityToken, int userId, UsersTreeFilterFlags userFilterFlags, int projectId, object userState) {
            if ((this.GetFeaturesByUserAndProjectOperationCompleted == null)) {
                this.GetFeaturesByUserAndProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeaturesByUserAndProjectOperationCompleted);
            }
            this.InvokeAsync("GetFeaturesByUserAndProject", new object[] {
                        securityToken,
                        userId,
                        userFilterFlags,
                        projectId}, this.GetFeaturesByUserAndProjectOperationCompleted, userState);
        }
        
        private void OnGetFeaturesByUserAndProjectOperationCompleted(object arg) {
            if ((this.GetFeaturesByUserAndProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeaturesByUserAndProjectCompleted(this, new GetFeaturesByUserAndProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetByFeatureId", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Feature GetByFeatureId(System.Guid securityToken, int featureId) {
            object[] results = this.Invoke("GetByFeatureId", new object[] {
                        securityToken,
                        featureId});
            return ((Feature)(results[0]));
        }
        
        /// <remarks/>
        public void GetByFeatureIdAsync(System.Guid securityToken, int featureId) {
            this.GetByFeatureIdAsync(securityToken, featureId, null);
        }
        
        /// <remarks/>
        public void GetByFeatureIdAsync(System.Guid securityToken, int featureId, object userState) {
            if ((this.GetByFeatureIdOperationCompleted == null)) {
                this.GetByFeatureIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByFeatureIdOperationCompleted);
            }
            this.InvokeAsync("GetByFeatureId", new object[] {
                        securityToken,
                        featureId}, this.GetByFeatureIdOperationCompleted, userState);
        }
        
        private void OnGetByFeatureIdOperationCompleted(object arg) {
            if ((this.GetByFeatureIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByFeatureIdCompleted(this, new GetByFeatureIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetCustomFieldValuesList", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomFieldValue[] GetCustomFieldValuesList(System.Guid securityToken) {
            object[] results = this.Invoke("GetCustomFieldValuesList", new object[] {
                        securityToken});
            return ((CustomFieldValue[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomFieldValuesListAsync(System.Guid securityToken) {
            this.GetCustomFieldValuesListAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetCustomFieldValuesListAsync(System.Guid securityToken, object userState) {
            if ((this.GetCustomFieldValuesListOperationCompleted == null)) {
                this.GetCustomFieldValuesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomFieldValuesListOperationCompleted);
            }
            this.InvokeAsync("GetCustomFieldValuesList", new object[] {
                        securityToken}, this.GetCustomFieldValuesListOperationCompleted, userState);
        }
        
        private void OnGetCustomFieldValuesListOperationCompleted(object arg) {
            if ((this.GetCustomFieldValuesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomFieldValuesListCompleted(this, new GetCustomFieldValuesListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/GetCustomFieldsList", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomFieldsList(System.Guid securityToken) {
            object[] results = this.Invoke("GetCustomFieldsList", new object[] {
                        securityToken});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomFieldsListAsync(System.Guid securityToken) {
            this.GetCustomFieldsListAsync(securityToken, null);
        }
        
        /// <remarks/>
        public void GetCustomFieldsListAsync(System.Guid securityToken, object userState) {
            if ((this.GetCustomFieldsListOperationCompleted == null)) {
                this.GetCustomFieldsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomFieldsListOperationCompleted);
            }
            this.InvokeAsync("GetCustomFieldsList", new object[] {
                        securityToken}, this.GetCustomFieldsListOperationCompleted, userState);
        }
        
        private void OnGetCustomFieldsListOperationCompleted(object arg) {
            if ((this.GetCustomFieldsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomFieldsListCompleted(this, new GetCustomFieldsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/AddChangeNotificationUser", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddChangeNotificationUser(System.Guid securityToken, int featureId, int userId) {
            this.Invoke("AddChangeNotificationUser", new object[] {
                        securityToken,
                        featureId,
                        userId});
        }
        
        /// <remarks/>
        public void AddChangeNotificationUserAsync(System.Guid securityToken, int featureId, int userId) {
            this.AddChangeNotificationUserAsync(securityToken, featureId, userId, null);
        }
        
        /// <remarks/>
        public void AddChangeNotificationUserAsync(System.Guid securityToken, int featureId, int userId, object userState) {
            if ((this.AddChangeNotificationUserOperationCompleted == null)) {
                this.AddChangeNotificationUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddChangeNotificationUserOperationCompleted);
            }
            this.InvokeAsync("AddChangeNotificationUser", new object[] {
                        securityToken,
                        featureId,
                        userId}, this.AddChangeNotificationUserOperationCompleted, userState);
        }
        
        private void OnAddChangeNotificationUserOperationCompleted(object arg) {
            if ((this.AddChangeNotificationUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddChangeNotificationUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/AddChangeNotificationCustomerContact", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddChangeNotificationCustomerContact(System.Guid securityToken, int featureId, int customerContactId) {
            this.Invoke("AddChangeNotificationCustomerContact", new object[] {
                        securityToken,
                        featureId,
                        customerContactId});
        }
        
        /// <remarks/>
        public void AddChangeNotificationCustomerContactAsync(System.Guid securityToken, int featureId, int customerContactId) {
            this.AddChangeNotificationCustomerContactAsync(securityToken, featureId, customerContactId, null);
        }
        
        /// <remarks/>
        public void AddChangeNotificationCustomerContactAsync(System.Guid securityToken, int featureId, int customerContactId, object userState) {
            if ((this.AddChangeNotificationCustomerContactOperationCompleted == null)) {
                this.AddChangeNotificationCustomerContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddChangeNotificationCustomerContactOperationCompleted);
            }
            this.InvokeAsync("AddChangeNotificationCustomerContact", new object[] {
                        securityToken,
                        featureId,
                        customerContactId}, this.AddChangeNotificationCustomerContactOperationCompleted, userState);
        }
        
        private void OnAddChangeNotificationCustomerContactOperationCompleted(object arg) {
            if ((this.AddChangeNotificationCustomerContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddChangeNotificationCustomerContactCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/AddChangeNotificationEmailAddress", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddChangeNotificationEmailAddress(System.Guid securityToken, int featureId, string emailAddress) {
            this.Invoke("AddChangeNotificationEmailAddress", new object[] {
                        securityToken,
                        featureId,
                        emailAddress});
        }
        
        /// <remarks/>
        public void AddChangeNotificationEmailAddressAsync(System.Guid securityToken, int featureId, string emailAddress) {
            this.AddChangeNotificationEmailAddressAsync(securityToken, featureId, emailAddress, null);
        }
        
        /// <remarks/>
        public void AddChangeNotificationEmailAddressAsync(System.Guid securityToken, int featureId, string emailAddress, object userState) {
            if ((this.AddChangeNotificationEmailAddressOperationCompleted == null)) {
                this.AddChangeNotificationEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddChangeNotificationEmailAddressOperationCompleted);
            }
            this.InvokeAsync("AddChangeNotificationEmailAddress", new object[] {
                        securityToken,
                        featureId,
                        emailAddress}, this.AddChangeNotificationEmailAddressOperationCompleted, userState);
        }
        
        private void OnAddChangeNotificationEmailAddressOperationCompleted(object arg) {
            if ((this.AddChangeNotificationEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddChangeNotificationEmailAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://axosoft.com/ontime/webservices/CastVote", RequestNamespace="http://axosoft.com/ontime/webservices/", ResponseNamespace="http://axosoft.com/ontime/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CastVote(System.Guid securityToken, int featureId, UserType userType, int userId, int voteNumber) {
            this.Invoke("CastVote", new object[] {
                        securityToken,
                        featureId,
                        userType,
                        userId,
                        voteNumber});
        }
        
        /// <remarks/>
        public void CastVoteAsync(System.Guid securityToken, int featureId, UserType userType, int userId, int voteNumber) {
            this.CastVoteAsync(securityToken, featureId, userType, userId, voteNumber, null);
        }
        
        /// <remarks/>
        public void CastVoteAsync(System.Guid securityToken, int featureId, UserType userType, int userId, int voteNumber, object userState) {
            if ((this.CastVoteOperationCompleted == null)) {
                this.CastVoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCastVoteOperationCompleted);
            }
            this.InvokeAsync("CastVote", new object[] {
                        securityToken,
                        featureId,
                        userType,
                        userId,
                        voteNumber}, this.CastVoteOperationCompleted, userState);
        }
        
        private void OnCastVoteOperationCompleted(object arg) {
            if ((this.CastVoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CastVoteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public partial class Feature : OnTimeItem {
        
        private int featureIdField;
        
        private string plannedBuildNumberField;
        
        private System.DateTime completionDateField;
        
        private System.DateTime startDateField;
        
        private int requestedByIdField;
        
        private int requestedByCustomerContactIdField;
        
        private int creatorIdField;
        
        /// <remarks/>
        public int FeatureId {
            get {
                return this.featureIdField;
            }
            set {
                this.featureIdField = value;
            }
        }
        
        /// <remarks/>
        public string PlannedBuildNumber {
            get {
                return this.plannedBuildNumberField;
            }
            set {
                this.plannedBuildNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CompletionDate {
            get {
                return this.completionDateField;
            }
            set {
                this.completionDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public int RequestedById {
            get {
                return this.requestedByIdField;
            }
            set {
                this.requestedByIdField = value;
            }
        }
        
        /// <remarks/>
        public int RequestedByCustomerContactId {
            get {
                return this.requestedByCustomerContactIdField;
            }
            set {
                this.requestedByCustomerContactIdField = value;
            }
        }
        
        /// <remarks/>
        public int CreatorId {
            get {
                return this.creatorIdField;
            }
            set {
                this.creatorIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Feature))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public abstract partial class OnTimeItem {
        
        private bool hasAttachmentsField;
        
        private bool hasNotificationsField;
        
        private bool hasRelatedItemsField;
        
        private bool hasSCMFilesField;
        
        private bool hasEmailsField;
        
        private bool hasWorkLogField;
        
        private bool hasAlertsField;
        
        private string nameField;
        
        private CustomFieldValue[] customFieldValuesField;
        
        private int projectIdField;
        
        private int lastUpdatedByIdField;
        
        private bool archivedField;
        
        private int workflowStepIdField;
        
        private int reportedByIdField;
        
        private int assignedToIdField;
        
        private int createdByIdField;
        
        private int reportedByCustomerContactIdField;
        
        private float estimatedDurationField;
        
        private int durationUnitTypeIdField;
        
        private float remainingDurationField;
        
        private int remainingUnitTypeIdField;
        
        private float actualDurationField;
        
        private int actualUnitTypeIdField;
        
        private bool publiclyViewableField;
        
        private System.DateTime dueDateField;
        
        private int priorityTypeIdField;
        
        private int releaseIdField;
        
        private int statusTypeIdField;
        
        private byte percentCompleteField;
        
        private System.DateTime createdDateTimeField;
        
        private System.DateTime lastUpdatedDateTimeField;
        
        private string descriptionField;
        
        private string notesField;
        
        private byte[] lastUpdatedField;
        
        private int voteCountField;
        
        private decimal voteAverageField;
        
        private int userVoteField;
        
        private VoteItemType voteItemTypeField;
        
        private int itemIdField;
        
        /// <remarks/>
        public bool HasAttachments {
            get {
                return this.hasAttachmentsField;
            }
            set {
                this.hasAttachmentsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasNotifications {
            get {
                return this.hasNotificationsField;
            }
            set {
                this.hasNotificationsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasRelatedItems {
            get {
                return this.hasRelatedItemsField;
            }
            set {
                this.hasRelatedItemsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasSCMFiles {
            get {
                return this.hasSCMFilesField;
            }
            set {
                this.hasSCMFilesField = value;
            }
        }
        
        /// <remarks/>
        public bool HasEmails {
            get {
                return this.hasEmailsField;
            }
            set {
                this.hasEmailsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasWorkLog {
            get {
                return this.hasWorkLogField;
            }
            set {
                this.hasWorkLogField = value;
            }
        }
        
        /// <remarks/>
        public bool HasAlerts {
            get {
                return this.hasAlertsField;
            }
            set {
                this.hasAlertsField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public CustomFieldValue[] CustomFieldValues {
            get {
                return this.customFieldValuesField;
            }
            set {
                this.customFieldValuesField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int LastUpdatedById {
            get {
                return this.lastUpdatedByIdField;
            }
            set {
                this.lastUpdatedByIdField = value;
            }
        }
        
        /// <remarks/>
        public bool Archived {
            get {
                return this.archivedField;
            }
            set {
                this.archivedField = value;
            }
        }
        
        /// <remarks/>
        public int WorkflowStepId {
            get {
                return this.workflowStepIdField;
            }
            set {
                this.workflowStepIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReportedById {
            get {
                return this.reportedByIdField;
            }
            set {
                this.reportedByIdField = value;
            }
        }
        
        /// <remarks/>
        public int AssignedToId {
            get {
                return this.assignedToIdField;
            }
            set {
                this.assignedToIdField = value;
            }
        }
        
        /// <remarks/>
        public int CreatedById {
            get {
                return this.createdByIdField;
            }
            set {
                this.createdByIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReportedByCustomerContactId {
            get {
                return this.reportedByCustomerContactIdField;
            }
            set {
                this.reportedByCustomerContactIdField = value;
            }
        }
        
        /// <remarks/>
        public float EstimatedDuration {
            get {
                return this.estimatedDurationField;
            }
            set {
                this.estimatedDurationField = value;
            }
        }
        
        /// <remarks/>
        public int DurationUnitTypeId {
            get {
                return this.durationUnitTypeIdField;
            }
            set {
                this.durationUnitTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public float RemainingDuration {
            get {
                return this.remainingDurationField;
            }
            set {
                this.remainingDurationField = value;
            }
        }
        
        /// <remarks/>
        public int RemainingUnitTypeId {
            get {
                return this.remainingUnitTypeIdField;
            }
            set {
                this.remainingUnitTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public float ActualDuration {
            get {
                return this.actualDurationField;
            }
            set {
                this.actualDurationField = value;
            }
        }
        
        /// <remarks/>
        public int ActualUnitTypeId {
            get {
                return this.actualUnitTypeIdField;
            }
            set {
                this.actualUnitTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public bool PubliclyViewable {
            get {
                return this.publiclyViewableField;
            }
            set {
                this.publiclyViewableField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
            }
        }
        
        /// <remarks/>
        public int PriorityTypeId {
            get {
                return this.priorityTypeIdField;
            }
            set {
                this.priorityTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int ReleaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        public int StatusTypeId {
            get {
                return this.statusTypeIdField;
            }
            set {
                this.statusTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public byte PercentComplete {
            get {
                return this.percentCompleteField;
            }
            set {
                this.percentCompleteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdatedDateTime {
            get {
                return this.lastUpdatedDateTimeField;
            }
            set {
                this.lastUpdatedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public int VoteCount {
            get {
                return this.voteCountField;
            }
            set {
                this.voteCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal VoteAverage {
            get {
                return this.voteAverageField;
            }
            set {
                this.voteAverageField = value;
            }
        }
        
        /// <remarks/>
        public int UserVote {
            get {
                return this.userVoteField;
            }
            set {
                this.userVoteField = value;
            }
        }
        
        /// <remarks/>
        public VoteItemType VoteItemType {
            get {
                return this.voteItemTypeField;
            }
            set {
                this.voteItemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int ItemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public partial class CustomFieldValue {
        
        private CustomField customFieldField;
        
        private object valueField;
        
        /// <remarks/>
        public CustomField CustomField {
            get {
                return this.customFieldField;
            }
            set {
                this.customFieldField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public partial class CustomField {
        
        private int customFieldIdField;
        
        private string tableFieldNameField;
        
        private CustomFieldTypes fieldTypeField;
        
        private CustomRecordTypes recordTypeField;
        
        private string fieldLabelField;
        
        private int pickListIdField;
        
        private int stringSizeField;
        
        private string formatField;
        
        private int displayOrderField;
        
        private bool isMultiSelectField;
        
        private bool isEditableField;
        
        private bool isCustomFieldField;
        
        private bool isGroupableField;
        
        private bool isSearchableField;
        
        private string sortExpressionField;
        
        private string selectExpressionField;
        
        /// <remarks/>
        public int CustomFieldId {
            get {
                return this.customFieldIdField;
            }
            set {
                this.customFieldIdField = value;
            }
        }
        
        /// <remarks/>
        public string TableFieldName {
            get {
                return this.tableFieldNameField;
            }
            set {
                this.tableFieldNameField = value;
            }
        }
        
        /// <remarks/>
        public CustomFieldTypes FieldType {
            get {
                return this.fieldTypeField;
            }
            set {
                this.fieldTypeField = value;
            }
        }
        
        /// <remarks/>
        public CustomRecordTypes RecordType {
            get {
                return this.recordTypeField;
            }
            set {
                this.recordTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FieldLabel {
            get {
                return this.fieldLabelField;
            }
            set {
                this.fieldLabelField = value;
            }
        }
        
        /// <remarks/>
        public int PickListId {
            get {
                return this.pickListIdField;
            }
            set {
                this.pickListIdField = value;
            }
        }
        
        /// <remarks/>
        public int StringSize {
            get {
                return this.stringSizeField;
            }
            set {
                this.stringSizeField = value;
            }
        }
        
        /// <remarks/>
        public string Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
            }
        }
        
        /// <remarks/>
        public int DisplayOrder {
            get {
                return this.displayOrderField;
            }
            set {
                this.displayOrderField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMultiSelect {
            get {
                return this.isMultiSelectField;
            }
            set {
                this.isMultiSelectField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEditable {
            get {
                return this.isEditableField;
            }
            set {
                this.isEditableField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCustomField {
            get {
                return this.isCustomFieldField;
            }
            set {
                this.isCustomFieldField = value;
            }
        }
        
        /// <remarks/>
        public bool IsGroupable {
            get {
                return this.isGroupableField;
            }
            set {
                this.isGroupableField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSearchable {
            get {
                return this.isSearchableField;
            }
            set {
                this.isSearchableField = value;
            }
        }
        
        /// <remarks/>
        public string SortExpression {
            get {
                return this.sortExpressionField;
            }
            set {
                this.sortExpressionField = value;
            }
        }
        
        /// <remarks/>
        public string SelectExpression {
            get {
                return this.selectExpressionField;
            }
            set {
                this.selectExpressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public enum CustomFieldTypes {
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        PickList,
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        Hyperlink,
        
        /// <remarks/>
        Comments,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public enum CustomRecordTypes {
        
        /// <remarks/>
        Defect,
        
        /// <remarks/>
        Feature,
        
        /// <remarks/>
        Task,
        
        /// <remarks/>
        Incident,
        
        /// <remarks/>
        WorkLog,
        
        /// <remarks/>
        Project,
        
        /// <remarks/>
        Customer,
        
        /// <remarks/>
        CustomerContact,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public enum VoteItemType {
        
        /// <remarks/>
        Defect,
        
        /// <remarks/>
        Feature,
        
        /// <remarks/>
        Task,
        
        /// <remarks/>
        Incident,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public enum UsersTreeFilterFlags {
        
        /// <remarks/>
        CreatedBy = 1,
        
        /// <remarks/>
        ReportedBy = 2,
        
        /// <remarks/>
        AssignedTo = 4,
        
        /// <remarks/>
        LastUpdatedBy = 8,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://axosoft.com/ontime/webservices/")]
    public enum UserType {
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        CustomerContact,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddFeatureCompletedEventHandler(object sender, AddFeatureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFeatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFeatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddFeatureWithNotificationCompletedEventHandler(object sender, AddFeatureWithNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFeatureWithNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFeatureWithNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateFeatureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateFeatureWithLockCompletedEventHandler(object sender, UpdateFeatureWithLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFeatureWithLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFeatureWithLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteFeatureCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteFeatureWithLockCompletedEventHandler(object sender, DeleteFeatureWithLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFeatureWithLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFeatureWithLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllFeaturesCompletedEventHandler(object sender, GetAllFeaturesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFeaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFeaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllFeaturesWithNamesCompletedEventHandler(object sender, GetAllFeaturesWithNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFeaturesWithNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFeaturesWithNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeaturesByProjectCompletedEventHandler(object sender, GetFeaturesByProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesByProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesByProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeaturesByReleaseCompletedEventHandler(object sender, GetFeaturesByReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesByReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesByReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeaturesByReleaseAndProjectCompletedEventHandler(object sender, GetFeaturesByReleaseAndProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesByReleaseAndProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesByReleaseAndProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeaturesByCustomerCompletedEventHandler(object sender, GetFeaturesByCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesByCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesByCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeaturesByCustomerAndProjectCompletedEventHandler(object sender, GetFeaturesByCustomerAndProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesByCustomerAndProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesByCustomerAndProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeaturesByCustomerContactCompletedEventHandler(object sender, GetFeaturesByCustomerContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesByCustomerContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesByCustomerContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeaturesByCustomerContactAndProjectCompletedEventHandler(object sender, GetFeaturesByCustomerContactAndProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesByCustomerContactAndProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesByCustomerContactAndProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeaturesByUserCompletedEventHandler(object sender, GetFeaturesByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFeaturesByUserAndProjectCompletedEventHandler(object sender, GetFeaturesByUserAndProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeaturesByUserAndProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeaturesByUserAndProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetByFeatureIdCompletedEventHandler(object sender, GetByFeatureIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByFeatureIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByFeatureIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Feature Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Feature)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCustomFieldValuesListCompletedEventHandler(object sender, GetCustomFieldValuesListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomFieldValuesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomFieldValuesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomFieldValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomFieldValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCustomFieldsListCompletedEventHandler(object sender, GetCustomFieldsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomFieldsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomFieldsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddChangeNotificationUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddChangeNotificationCustomerContactCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddChangeNotificationEmailAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CastVoteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591